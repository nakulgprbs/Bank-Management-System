// *****************************************************************************************************************************
//                                        PROJECT BANK MANAGEMENT SYSTEM
// ******************************************************************************************************************************

// ******************************************************************************************************************************
//                                        LIBRARY USED IN PROJECT
// ******************************************************************************************************************************

#include <iostream>
#include <vector>
using namespace std;

//------------------------------------------------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------------------------------------------------
//                                             CLASS USED IN PROJECT
// -----------------------------------------------------------------------------------------------------------------------------

class BankAccount{
    private:
        string name;
        int accountNum;
        double balance;
    public:
        BankAccount(string n, int ac, double bal){
            name = n;
            accountNum = ac;
            balance = bal;
        } 
    string getName(){
        return name;
    }
    int getAccountNum(){
        return accountNum;
    }
   double getBalance(){
        return balance;
    }
    void deposit(double amount){
        balance = balance + amount;
    } 
    void withdraw(double amount){
        if(balance >= amount){
            balance = balance - amount;
            cout<<"\t\tWithdraw Successfully....."<<endl;
        }
        else{
            cout<<"\t\tInsufficient Balance....."<<endl;
        }
    }
};
class BankManagement{
    private:
        vector<BankAccount> accounts;
    public: 
        void AddAccount(string name, int accountNum, double balance){
            accounts.push_back(BankAccount(name, accountNum, balance));
        }
        void showAllAccount(){
            cout<<"\t\t All Account Holders "<<endl;   
            for(int i = 0; i < accounts.size(); i++){
                cout<<"Name :"<<accounts[i].getName()<<" Account Number :"<<accounts[i].getAccountNum()<<" Balance :"<<accounts[i].getBalance()<<endl;
            }
    }
        void searchAccount(int account){
            cout<<"\t\tAccount Holder"<<endl;
            for(int i =0; i < accounts.size(); i++){
                if(accounts[i].getAccountNum() == account){
                   cout<<"\t\tName :"<<accounts[i].getName()<<" Account Number :"<<accounts[i].getAccountNum()<<" Balance :"<<accounts[i].getBalance()<<endl; 
                }
            }
        }
       BankAccount* findAccount(int accountNum){
           for(int i =0; i< accounts.size(); i++){
               if(accounts[i].getAccountNum() == accountNum){
                   return &accounts[i];
               }
           }
           return nullptr;
       } 
};

//**********************************************************************************************************************************************************
//                                                                   MAIN FUNCTION
//**********************************************************************************************************************************************************

int main(){
    BankManagement Bank;
    int choice;
    char op;
   do{
               system("cls");
                 cout<<"\t\t:: Bank Management System"<<endl;
                 cout<<"\t\t\t\tMain Menu"<<endl;
                 cout<<"\t\t 1. Creat New Account"<<endl;
                 cout<<"\t\t 2. Show All Account"<<endl;
                 cout<<"\t\t 3. Search Account"<<endl;
                 cout<<"\t\t 4. Deposite Money"<<endl;
                 cout<<"\t\t 5. Withdraw Money"<<endl;
                 cout<<"\t\t 6. Exit"<<endl;
                 cout<<"\t\t------------------------------------------"<<endl;
                  cout<<"\t\tEnter your Choice : ";
                  cin>>choice;
      
      switch(choice){
          case 1:{
                string name;
                int accountnum;
                double balance;
                cout<<"\t\tEnter name :";
                cin>>name;
                cout<<"\t\tEnter Account Number :";
                cin>>accountnum;
                cout<<"\t\tEnter Initial Balance :";
                cin>>balance;
                Bank.AddAccount(name, accountnum, balance);
                cout<<"\t\t.....Account Created Successfully....."<<endl;
                break;
          }
           case 2:
                Bank.showAllAccount();
                break;
            case 3:
                int accountNum;
                cout<<"\t\tEnter Account Number :";
                cin>>accountNum;
                Bank.searchAccount(accountNum);
                break;
            case 4: {
                int accountNum;
                double amount;
                cout<<"\t\tEnter Account Number to Deposite Money :";
                cin>>accountNum;
                BankAccount* account = Bank.findAccount(accountNum);
                if(account != NULL){
                    cout<<"\t\tEnter Amount to Deposit :";
                    cin>>amount;
                    account->deposit(amount);
                    cout<<"\t\t"<<amount<<" Deposite Successfully....."<<endl;
                }
                else{
                    cout<<"\t\tAccount Not Found....."<<endl;
                }
                break;
            }
            case 5:
                {
                int accountNum;
                double amount;
                cout<<"\t\tEnter Account Number to Withdraw Money :";
                cin>>accountNum;
                BankAccount* account = Bank.findAccount(accountNum);
                if(account != NULL){
                    cout<<"\t\tEnter Amount to Withdraw :";
                    cin>>amount;
                    account->withdraw(amount);
                    cout<<"\t\t"<<amount<<" Withdraw Successfully....."<<endl;
                }
                else{
                    cout<<"\t\tAccount Not Found....."<<endl;
                }
            break;
            }
            case 6:{
                exit(1);
                break;
            }
      }
      cout<<"\t\t Do you Want to Continue or exit [Yes/No] ??";
      cin>>op;
   }
   while(op == 'y'|| op == 'Y');
      
}
